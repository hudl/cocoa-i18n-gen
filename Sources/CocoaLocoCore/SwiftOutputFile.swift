//
//  SwiftOutputFile.swift
//  Cocoa i18n
//
//  Created by Brian Clymer on 5/27/19.
//  Copyright Â© 2019 Hudl. All rights reserved.
//

import Foundation

class SwiftOutputFile {
    
    private let namespace: LocalizationNamespace
    
    init(namespace: LocalizationNamespace) {
        self.namespace = namespace
    }
    
    func write(to url: URL, objc: Bool, isPublic: Bool, visibility: Visibility, prefix: String? = nil, bundleName: String? = nil) throws {
        var content = "// This file is autogenerated, do not modify it. Modify the strings in LocalizableStrings.json instead\n\n"
        content += "import Foundation\n"
        content += "private let __bundle = Foundation.Bundle"
        if let bundleName = bundleName {
            content += ".\(bundleName)\n"
        } else {
            content += "(for: BundleReference.self)\n"
        }
        content += namespace.toSwiftCode(indent: 0, visibility: visibility)
        content += "\n\n"
        if objc {
            content += "// Compatibility layer so the strings can be used in ObjC\n"
            content += "// This code should only be available to Objective-C, not Swift, hence to obsoleted attribute.\n"
            content += "@objcMembers\n"
            content += "@available(swift, obsoleted: 1.0, message: \"Use LocalizableStrings instead\")\n"
            content += "\(visibility.rawValue) class ObjCLocalizableStrings: Foundation.NSObject {\n"
            content += namespace.toObjcCode(visibility: visibility)
            content += "}\n\n"
        }
        content += "private class BundleReference {}"
        
        // TODO Do I need to make sure parent directories are set up?
        try content.write(to: url, atomically: true, encoding: .utf8)
    }
    
}
